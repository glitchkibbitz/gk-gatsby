(self.webpackChunkglitch_kibbitz=self.webpackChunkglitch_kibbitz||[]).push([[686],{6818:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return i}});var a=n(7294),s=n(1633);function i(){var t=this;return a.createElement(a.Fragment,null,a.createElement(s.Z,{title:"Starry Shtetl Defender"}),a.createElement("h1",null,"Starry Shtetl Defender"),a.createElement("canvas",{id:"canvas"},"HTML5 canvas appears to be unsupported in the current browser.",a.createElement("br",null),"Please try updating or use a different browser."),a.createElement("div",{id:"status"},a.createElement("div",{id:"status-progress",style:{display:"none"},onContextMenu:function(e){return t.handleContextMenu(e)}},a.createElement("div",{id:"status-progress-inner"})),a.createElement("div",{id:"status-indeterminate",style:{display:"none"},onContextMenu:function(e){return t.handleContextMenu(e)}},a.createElement("div",null),a.createElement("div",null),a.createElement("div",null),a.createElement("div",null),a.createElement("div",null),a.createElement("div",null),a.createElement("div",null),a.createElement("div",null)),a.createElement("div",{id:"status-notice",className:"godot",style:{display:"none"}}),a.createElement("script",{type:"text/javascript",src:"/StarryShtetlDefenderExport/Starry Shtetl Defender.js"}),a.createElement("script",{dangerouslySetInnerHTML:{__html:"\n                        //<![CDATA[\n\n\t\tvar engine = new Engine;\n\t\tvar setStatusMode;\n\t\tvar setStatusNotice;\n\n\t\t(function() {\n\n\t\t\tconst EXECUTABLE_NAME = '/StarryShtetlDefenderExport/Starry Shtetl Defender';\n\t\t\tconst MAIN_PACK = 'Starry Shtetl Defender.pck';\n\t\t\tconst INDETERMINATE_STATUS_STEP_MS = 100;\n\n\t\t\tvar canvas = document.getElementById('canvas');\n\t\t\tvar statusProgress = document.getElementById('status-progress');\n\t\t\tvar statusProgressInner = document.getElementById('status-progress-inner');\n\t\t\tvar statusIndeterminate = document.getElementById('status-indeterminate');\n\t\t\tvar statusNotice = document.getElementById('status-notice');\n\n\t\t\tvar initializing = true;\n\t\t\tvar statusMode = 'hidden';\n\n\t\t\tvar animationCallbacks = [];\n\t\t\tfunction animate(time) {\n\t\t\t\tanimationCallbacks.forEach(callback => callback(time));\n\t\t\t\trequestAnimationFrame(animate);\n\t\t\t}\n\t\t\trequestAnimationFrame(animate);\n\n\t\t\tfunction adjustCanvasDimensions() {\n\t\t\t\tvar scale = window.devicePixelRatio || 1;\n\t\t\t\tvar width = window.innerWidth;\n\t\t\t\tvar height = window.innerHeight - 50;\n\t\t\t\tcanvas.width = width * scale;\n\t\t\t\tcanvas.height = height * scale;\n\t\t\t\tcanvas.style.width = width + \"px\";\n\t\t\t\tcanvas.style.height = height + \"px\";\n\t\t\t}\n\t\t\tanimationCallbacks.push(adjustCanvasDimensions);\n\t\t\tadjustCanvasDimensions();\n\n\t\t\tsetStatusMode = function setStatusMode(mode) {\n\n\t\t\t\tif (statusMode === mode || !initializing)\n\t\t\t\t\treturn;\n\t\t\t\t[statusProgress, statusIndeterminate, statusNotice].forEach(elem => {\n\t\t\t\t\telem.style.display = 'none';\n\t\t\t\t});\n\t\t\t\tanimationCallbacks = animationCallbacks.filter(function(value) {\n\t\t\t\t\treturn (value != animateStatusIndeterminate);\n\t\t\t\t});\n\t\t\t\tswitch (mode) {\n\t\t\t\t\tcase 'progress':\n\t\t\t\t\t\tstatusProgress.style.display = 'block';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'indeterminate':\n\t\t\t\t\t\tstatusIndeterminate.style.display = 'block';\n\t\t\t\t\t\tanimationCallbacks.push(animateStatusIndeterminate);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'notice':\n\t\t\t\t\t\tstatusNotice.style.display = 'block';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hidden':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error('Invalid status mode');\n\t\t\t\t}\n\t\t\t\tstatusMode = mode;\n\t\t\t}\n\n\t\t\tfunction animateStatusIndeterminate(ms) {\n\n\t\t\t\tvar i = Math.floor(ms / INDETERMINATE_STATUS_STEP_MS % 8);\n\t\t\t\tif (statusIndeterminate.children[i].style.borderTopColor == '') {\n\t\t\t\t\tArray.prototype.slice.call(statusIndeterminate.children).forEach(child => {\n\t\t\t\t\t\tchild.style.borderTopColor = '';\n\t\t\t\t\t});\n\t\t\t\t\tstatusIndeterminate.children[i].style.borderTopColor = '#dfdfdf';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tsetStatusNotice = function setStatusNotice(text) {\n\n\t\t\t\twhile (statusNotice.lastChild) {\n\t\t\t\t\tstatusNotice.removeChild(statusNotice.lastChild);\n\t\t\t\t}\n\t\t\t\tvar lines = text.split('\n');\n\t\t\t\tlines.forEach((line) => {\n\t\t\t\t\tstatusNotice.appendChild(document.createTextNode(line));\n\t\t\t\t\tstatusNotice.appendChild(document.createElement('br'));\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tengine.setProgressFunc((current, total) => {\n\n\t\t\t\tif (total > 0) {\n\t\t\t\t\tstatusProgressInner.style.width = current/total * 100 + '%';\n\t\t\t\t\tsetStatusMode('progress');\n\t\t\t\t\tif (current === total) {\n\t\t\t\t\t\t// wait for progress bar animation\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tsetStatusMode('indeterminate');\n\t\t\t\t\t\t}, 500);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tsetStatusMode('indeterminate');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tfunction displayFailureNotice(err) {\n\t\t\t\tvar msg = err.message || err;\n\t\t\t\tconsole.error(msg);\n\t\t\t\tsetStatusNotice(msg);\n\t\t\t\tsetStatusMode('notice');\n\t\t\t\tinitializing = false;\n\t\t\t};\n\n\t\t\tif (!Engine.isWebGLAvailable()) {\n\t\t\t\tdisplayFailureNotice('WebGL not available');\n\t\t\t} else {\n\t\t\t\tsetStatusMode('indeterminate');\n\t\t\t\tengine.setCanvas(canvas);\n\t\t\t\tengine.startGame(EXECUTABLE_NAME, MAIN_PACK).then(() => {\n\t\t\t\t\tsetStatusMode('hidden');\n\t\t\t\t\tinitializing = false;\n\t\t\t\t}, displayFailureNotice);\n\t\t\t}\n\t\t})();\n\t//]]>\n                        \n            "}})))}}}]);
//# sourceMappingURL=component---src-pages-games-shtetl-defender-js-33f274a7171fc43fc0cd.js.map